version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    networks:
      - ee-global-backend-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=skyvern
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d skyvern"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  skyvern:
    image: public.ecr.aws/skyvern/skyvern:latest
    networks:
      - ee-global-backend-network
      - ee-global-frontend-network
    environment:
      - DATABASE_STRING=postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/skyvern
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - VIRTUAL_PORT=8000
    volumes:
      - skyvern-artifacts:/data/artifacts
      - skyvern-videos:/data/videos
      - skyvern-har:/data/har
      - skyvern-log:/data/log
      - streamlit-config:/.streamlit
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  skyvern-ui:
    image: public.ecr.aws/skyvern/skyvern-ui:latest
    networks:
      - ee-global-frontend-network
    environment:
      - VITE_API_BASE_URL=https://${VIRTUAL_HOST}/api/v1
      - VITE_WSS_BASE_URL=wss://${VIRTUAL_HOST}/api/v1
    depends_on:
      skyvern:
        condition: service_healthy

networks:
  ee-global-frontend-network:
    external: true
  ee-global-backend-network:
    external: true

volumes:
  postgres-data:
  skyvern-artifacts:
  skyvern-videos:
  skyvern-har:
  skyvern-log:
  streamlit-config:
